name: Test/Deploy newly added or modifed xassida files
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.file_changes.outputs.files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Get file changes
        id: file_changes
        uses: trilom/file-changes-action@v1.2.4
      - name: Run Python parse_xassida script on changes
        if: '${{ steps.file_changes.outputs.files }}'
        run: |
          matched_files=$(echo '${{ steps.file_changes.outputs.files }}')
          files=$(echo "$matched_files" | jq -r '.[]')
          processed=()
          for file in ${files[@]}; do
            if [[ $file == xassidas/**/*.txt ]]; then
              name=$(basename $file | cut -f 1 -d '.')
              if [[ " ${processed[@]} " =~ " $name " ]]; then
                echo "Skipping duplicate xassida $name"
              else
                if python parse_xassida.py -x "$name" && python parse_translations.py -x "$name"; then
                  echo "Processed xassida $name"
                  processed+=("$name")
                else
                  echo "Failed to process xassida $name"
                  exit 1
                fi
              fi
            fi
          done
  update:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Parsing the output
        run: |
          matched_files=$(echo '${{ needs.test.outputs.changed_files }}')
          files=$(echo "$matched_files" | jq -r '.[]')
          echo "XASSIDAS='$files'" >> $GITHUB_ENV
      - name: Run insertion playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: update_db.yml
          directory: .ansible/playbooks/
          key: '${{ secrets.SECRET_SSH_KEY }}'
          inventory: |
            [apiservers]
            server1 ansible_host=134.209.180.132 ansible_user=root
          options: |
            --extra-vars xassidas=${{ env.XASSIDAS }}
            --user root
            --ssh-extra-args "-o StrictHostKeyChecking=no"
            --verbose
